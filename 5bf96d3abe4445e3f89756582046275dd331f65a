{
  "comments": [
    {
      "key": {
        "uuid": "1ed18a8c_88e3571a",
        "filename": "src/devices/audio/avoiding_pi.jd",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1051443
      },
      "writtenOn": "2015-06-25T20:14:04Z",
      "side": 1,
      "message": "A common workaround for priority inversion is to increase audio buffer sizes. However, this method increases latency and merely hides the problem instead of solving it. It is better to understand and prevent priority inversion, as seen below.",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 84,
        "endChar": 43
      },
      "revId": "5bf96d3abe4445e3f89756582046275dd331f65a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dea1b20d_6ed42f33",
        "filename": "src/devices/audio/latency_app.jd",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1051443
      },
      "writtenOn": "2015-06-25T20:14:04Z",
      "side": 1,
      "message": "https://youtu.be/d3kfEeMZ65c",
      "range": {
        "startLine": 168,
        "startChar": 13,
        "endLine": 168,
        "endChar": 56
      },
      "revId": "5bf96d3abe4445e3f89756582046275dd331f65a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed18a8c_e8d81364",
        "filename": "src/devices/audio/latency_app.jd",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1051443
      },
      "writtenOn": "2015-06-25T20:14:04Z",
      "side": 1,
      "message": "https://youtu.be/92fgcUNCHic\n\nI figured that we could use the shortened Youtube URL structure in all.",
      "range": {
        "startLine": 171,
        "startChar": 13,
        "endLine": 171,
        "endChar": 56
      },
      "revId": "5bf96d3abe4445e3f89756582046275dd331f65a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9eabbaef_ecd82b64",
        "filename": "src/devices/audio/latency_contrib.jd",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1051443
      },
      "writtenOn": "2015-06-25T20:14:04Z",
      "side": 1,
      "message": "I think it would be better to reproduce a short definition here and point to the article (but I can be swayed if you disagree).  Something like:\n\n\u003ca href\u003d\"http://en.wikipedia.org/wiki/Priority_inversion\"\u003ePriority inversion\u003c/a\u003e\nis a classic failure mode of real-time systems,\nwhere a higher-priority task is blocked for an unbounded time waiting\nfor a lower-priority task to release a resource such as (shared\nstate protected by) a\n\u003ca href\u003d\"http://en.wikipedia.org/wiki/Mutual_exclusion\"\u003emutex\u003c/a\u003e. \nSee the article \"\u003ca href\u003d\"avoiding_pi.html\"\u003eAvoiding priority inversion\u003ca\u003e\" for techniques to mitigate it.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 133,
        "endChar": 85
      },
      "revId": "5bf96d3abe4445e3f89756582046275dd331f65a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}